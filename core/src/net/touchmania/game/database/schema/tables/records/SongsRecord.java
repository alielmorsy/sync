/*
 * This file is generated by jOOQ.
*/
package net.touchmania.game.database.schema.tables.records;


import net.touchmania.game.database.schema.tables.Songs;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SongsRecord extends UpdatableRecordImpl<SongsRecord> implements Record3<String, String, String> {

    private static final long serialVersionUID = 1991499994;

    /**
     * Setter for <code>songs.pack</code>.
     */
    public void setPack(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>songs.pack</code>.
     */
    public String getPack() {
        return (String) get(0);
    }

    /**
     * Setter for <code>songs.directory</code>.
     */
    public void setDirectory(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>songs.directory</code>.
     */
    public String getDirectory() {
        return (String) get(1);
    }

    /**
     * Setter for <code>songs.hash</code>.
     */
    public void setHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>songs.hash</code>.
     */
    public String getHash() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Songs.SONGS.PACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Songs.SONGS.DIRECTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Songs.SONGS.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPack();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getDirectory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SongsRecord value1(String value) {
        setPack(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SongsRecord value2(String value) {
        setDirectory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SongsRecord value3(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SongsRecord values(String value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SongsRecord
     */
    public SongsRecord() {
        super(Songs.SONGS);
    }

    /**
     * Create a detached, initialised SongsRecord
     */
    public SongsRecord(String pack, String directory, String hash) {
        super(Songs.SONGS);

        set(0, pack);
        set(1, directory);
        set(2, hash);
    }
}
